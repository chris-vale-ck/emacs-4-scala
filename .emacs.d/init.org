#+TITLE: Emacs Config for Scala programmers
#+AUTHOR: Chris Vale
#+EMAIL: crispywalrus@gmail.com
#+BABLE: :tangle yes
#+STARTUP: content
* Table Of Contents
** [[#about][About]]
** [[#init][Init]]
*** [[#package-manager][Package Manager]]

    
* About
This is a basic configuration for emacs focused on those of us who use
scala primarily.

* Init

#+PROPERTY: header-args:elisp :tangle "init.el" :results silent

** Init
This begins our section on basic emacs initialization and
configuration. The idea is that while raw emacs is a power house it
can take a while to get up to speed with it. We're going to go through
some basic setup with commentary so we can get to productive quickly.
#+BEGIN_SRC elisp
;; require is the equivalent of import, so we're importing emacs's
;; package configuration and management system
(require 'package)

;; find packages in melpa, melpa stable, or for org mode, orgmode over
;; elpa (or marmalade for that matter)
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/") t)
(add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/") t)
(add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/") t)

(setq package-archive-priorities
  '(("melpa-stable" . 1)
    ("org" . 2)))

;; start the package manager
(package-initialize)

;; make sure all packages we use "ensure" so they're always loaded

(setq use-package-always-ensure t)

;; we're going to be using use-package to define and load
;; packages. it's a code based configuration with a bunch of fancy
;; extensions
(when
    (not package-archive-contents)
  (package-refresh-contents)
  (package-install 'use-package))
#+END_SRC

** Version Control

Lets setup git now. Magit will install it's documentation in info mode
so we're all good on learning how it works.

#+BEGIN_SRC elisp
(use-package magit
  :pin melpa-stable
  :commands magit-status magit-blame
  :init
  (setq magit-auto-revert-mode nil)
  (setq magit-last-seen-setup-instructions "1.4.0")
  :bind (("s-g" . magit-status)
         ("s-b" . magit-blame)))

(use-package magit-find-file)
(use-package gh)
(use-package magit-gh-pulls)
(use-package github-notifier)
(use-package git-auto-commit-mode)
(use-package git-timemachine)

#+END_SRC
